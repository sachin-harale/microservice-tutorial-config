package com.precise.service;

import java.io.File;
import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.precise.entity.FileHandling;
import com.precise.repository.FileHandlingRepository;

@Service
public class FileHandlingImpl implements FileHandlingService {

	@Autowired
	private FileHandlingRepository fileHandlingRepository;

	String filePath = "";

	@Override
	public String uploadFile(MultipartFile file) {
		FileHandling f = new FileHandling();

		// Try block to check exceptions
		try {
			filePath += System.getProperty("user.dir") + "/Uploads";

			System.out.println(System.getProperty("user.dir"));

			// byte
			byte[] bytes = file.getBytes();

			Path path = Paths.get(filePath + File.separator + file.getOriginalFilename());
			Files.write(path, bytes);
			f.setName(file.getOriginalFilename());
			this.fileHandlingRepository.save(f);
			return file.getOriginalFilename();

		}

		// Catch block to handle exceptions
		catch (Exception e) {
			e.printStackTrace();

		}
		return null;

	}

	@Override
	public boolean deleteFile(String filename) {
		try {

			Path path = Paths.get(filePath + File.separator + filename);
			System.out.println("Absolute path" + path);
			File file = new File(path.toString());
			System.out.println("Absolute file" + file);
			System.out.println("File is Exists or not " + file.getAbsolutePath());

			
			return (file.exists())?(file.delete())?true:false:false; // use nested turnary
			
			
			
			
//			if (file.delete()) {
//
//				System.out.println("File deleted Successfully");
//			}
//
//			else {
//				System.out.println("Internal Server Error :: ");
//			}

		} catch (Exception e) {
			throw new RuntimeException("Error: " + e.getMessage());
		}
	}

	// file exist
	@Override
	public void FileExists(String filename) {

		try
		{
		Path path = Paths.get(filePath + File.separator + filename);
		System.out.println("Absolute path" + path);
		File file = new File(path.toString());
		System.out.println("File is Exists or not " + file.getAbsolutePath());
		
		if(file.exists()) {
    		
    		System.out.println("File is Exists");	
    	}
    	
    	else {
    		System.out.println("File does not exists");	
    	}
    } 
		
	catch (Exception e) {
		throw new RuntimeException("Error: " + e.getMessage());
	}

	}
}


