package com.precise.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.precise.entity.Department;
import com.precise.message.ResponseMessage;
import com.precise.service.DepartmentService;
import com.precise.service.FileHandlingService;

@RestController
public class DepartmentController {

	@Autowired
	private DepartmentService departmentService;

	@Autowired
	private FileHandlingService fileHandlingService;

	@PostMapping("departments")
	public ResponseEntity<?> saveDepartment(@RequestBody Department department) {

		Map<String, Object> bodytag = new HashMap<String, Object>();

		Department saveDepartment = departmentService.saveDepartment(department);
		bodytag.put("data", saveDepartment);
		bodytag.put("statusCode", 200);
		return new ResponseEntity<>(bodytag, HttpStatus.OK);

	};

	@GetMapping("/departments")
	public List<Department> fetchDepartmentList() {
		return departmentService.fetchDepartmentList();

	}

	@PutMapping("/departments/{id}")
	public Department updateDepartment(@RequestBody Department department, @PathVariable("id") long departmentId) {

		return departmentService.updateDepartment(department, departmentId);

	};

	@DeleteMapping("/departments/{id}")
	public String deleteDepartmentById(@PathVariable("id") Long departmentId) {
		departmentService.deleteDepartmentById(departmentId);
		return "Deleted Successfully";
	}
	
	
//upload File
	@PostMapping("/uploadFile")
	public ResponseEntity<?> uploadFile(@RequestParam("file") MultipartFile[] file) {

		Map<String, Object> bodytag = new HashMap<String, Object>();
		for (MultipartFile files : file) {
			String uploadFile = fileHandlingService.uploadFile(files);

			// String uploadFile = fileHandlingService.uploadFile(file);
			bodytag.put("data", uploadFile);
			bodytag.put("statusCode", 200);

		}
		return new ResponseEntity<>(bodytag, HttpStatus.OK);
		// return new ResponseEntity<>("Not Uploaded File",
		// HttpStatus.INTERNAL_SERVER_ERROR);

	}

	
//delete particular file
	@DeleteMapping("/files")
	public ResponseEntity<?> deleteFile() {
		
		boolean deleteFile = fileHandlingService.deleteFile("DB.txt");
		return (deleteFile)?new ResponseEntity<>(" Delete File",HttpStatus.OK)
				:new ResponseEntity<>("Not Delete File",
				HttpStatus.INTERNAL_SERVER_ERROR);
	}
}
